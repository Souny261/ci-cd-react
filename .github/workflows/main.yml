name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  Docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Dependecies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Save version
        id: version
        run: echo ::set-output name=tag::$(echo $(node -p -e "require('./package.json').version"))

      - name: Increase version
        run: npm version patch

      # - name: Push new version
      #   run: git push

      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      # - name: Build Docker image
      #   # run: docker build . --file Dockerfile --tag ${{ secrets.DOCKERHUB_USERNAME }}/cd-ci-react:${{steps.version.outputs.tag}}
      #   run: docker build . --file Dockerfile --tag ${{ secrets.DOCKERHUB_USERNAME }}/cd-ci-react:latest

      # - name: Push to Docker Hub
      #   # run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/cd-ci-react:${{steps.version.outputs.tag}}
      #   run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/cd-ci-react:latest
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: build
        uses: docker/build-push-action@v2
        continue-on-error: true
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/cd-ci-react:latest

      - name: Call Portainer Webhook to Update Service
        id: callportainerwebhook
        if: steps.build.outcome == 'success'
        continue-on-error: true
        run: |

          CODE=`curl --write-out '%{http_code}' \
              --silent \
              --output /dev/null \
              --request POST \
              --url 'http://env-2295026.la1.ltccloud.la:9000/api/stacks/webhooks/38d5c251-f80d-44da-8092-36a1ddf1de0b'`

          if [ $CODE != "204" ] 
          then
              echo $CODE
              echo "FAILURE"
              exit 1
          else
              echo $CODE
              echo "SUCCESS"
              exit 0
          fi

      - name: Sent LINE Noti - Success
        if: steps.build.outcome == 'success' && steps.callportainerwebhook.outcome == 'success'
        uses: snow-actions/line-notify@v1.0.0
        with:
          access_token: ${{ secrets.LINE_ACCESS_TOKEN }}
          message: "üëè Success | build and deploy ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á ${{ github.event.commits[0].message }} ‡∏Ç‡∏≠‡∏á ${{ github.event.commits[0].author.name }} ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß ‡∏£‡∏≠‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏° Compile 1 ‡∏ô‡∏≤‡∏ó‡∏µ ‡πÅ‡∏•‡πâ‡∏ß‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢ üòé"

      - name: Sent LINE Noti - Failure
        if: steps.build.outcome != 'success' || steps.callportainerwebhook.outcome != 'success'
        uses: snow-actions/line-notify@v1.0.0
        with:
          access_token: ${{ secrets.LINE_ACCESS_TOKEN }}
          message: "‚ùå‚ùå‚ùå  Failure - Build Error ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á ${{ github.event.commits[0].message }} ‡∏Ç‡∏≠‡∏á ${{ github.event.commits[0].author.name }} ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö"
